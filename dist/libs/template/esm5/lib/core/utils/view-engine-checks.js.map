{"version":3,"file":"view-engine-checks.js","sourceRoot":"ng://@rx-angular/template/","sources":["lib/core/utils/view-engine-checks.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,mBAAmB,CAAC;AAElD;;;;;;;;;;;;;;;;;GAiBG;AACH,MAAM,UAAU,eAAe;IAC7B,IAAM,EAAE,GAAQ,aAAa,EAAE,CAAC,EAAE,CAAC;IAEnC,0CAA0C;IAC1C,0CAA0C;IAC1C,8EAA8E;IAC9E,OAAO,CACL,EAAE,KAAK,SAAS;QAChB,oCAAoC;QACpC,iEAAiE;QACjE,EAAE,CAAC,KAAK,KAAK,SAAS,CACvB,CAAC;AACJ,CAAC","sourcesContent":["import { getGlobalThis } from './get-global-this';\r\n\r\n/**\r\n * envRunsIvy\r\n *\r\n * @description\r\n * Determines the used view engine of an Angular project is Ivy or not.\r\n * The check is done based on following table:\r\n * | render       | ViewEngine | ViewEngine | Ivy         | Ivy         |\r\n * | ------------ | ---------- | ---------- | ----------- | ----------- |\r\n * | **mode**     | prod       | dev        | prod        | dev         |\r\n * | **ng**       | present    | present    | `undefined` | present     |\r\n * | **ng.probe** | present    | present    | `undefined` | `undefined` |\r\n *\r\n *  So for Ivy we need to make sure that ng is undefined or,\r\n *  in case of dev environment, ng.probe is undefined.\r\n *\r\n * @return {boolean} - true if the used view engine is Ivy.\r\n *\r\n */\r\nexport function isViewEngineIvy(): boolean {\r\n  const ng: any = getGlobalThis().ng;\r\n\r\n  // Is the global ng object is unavailable?\r\n  // ng === undefined in Ivy production mode\r\n  // View Engine has the ng object both in development mode and production mode.\r\n  return (\r\n    ng === undefined ||\r\n    // in case we are in dev mode in ivy\r\n    // `probe` property is available on ng object we use View Engine.\r\n    ng.probe === undefined\r\n  );\r\n}\r\n"]}