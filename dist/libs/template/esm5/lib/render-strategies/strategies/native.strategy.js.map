{"version":3,"file":"native.strategy.js","sourceRoot":"ng://@rx-angular/template/","sources":["lib/render-strategies/strategies/native.strategy.ts"],"names":[],"mappings":"AAEA;;;;;;;;;;;;;;GAcG;AACH,MAAM,UAAU,oBAAoB,CAClC,MAAmC;IAEnC,OAAO;QACL,IAAI,EAAE,QAAQ;QACd,YAAY,EAAE,MAAM,CAAC,KAAK,CAAC,YAAY;QACvC,QAAQ,EAAE,UAAA,CAAC,IAAI,OAAA,CAAC,EAAD,CAAC;QAChB,UAAU,EAAE;YACV,MAAM,CAAC,KAAK,CAAC,YAAY,EAAE,CAAC;QAC9B,CAAC;KACF,CAAC;AACJ,CAAC","sourcesContent":["import { RenderStrategy, RenderStrategyFactoryConfig } from '../../core';\r\n\r\n/**\r\n * Native Strategy\r\n * @description\r\n *\r\n * This strategy mirrors Angular's built-in `async` pipe.\r\n * This means for every emitted value `ChangeDetectorRef#markForCheck` is called.\r\n *\r\n * | Name        | ZoneLess VE/I | Render Method VE/I  | Coalescing VE/I  |\r\n * |-------------| --------------| ------------ ------ | ---------------- |\r\n * | `native`    | ❌/❌         | mFC / mFC           | ❌               |\r\n *\r\n * @param config { RenderStrategyFactoryConfig } - The values this strategy needs to get calculated.\r\n * @return {RenderStrategy<T>} - The calculated strategy\r\n *\r\n */\r\nexport function createNativeStrategy<T>(\r\n  config: RenderStrategyFactoryConfig\r\n): RenderStrategy<T> {\r\n  return {\r\n    name: 'native',\r\n    renderMethod: config.cdRef.markForCheck,\r\n    behavior: o => o,\r\n    scheduleCD: () => {\r\n      config.cdRef.markForCheck();\r\n    }\r\n  };\r\n}\r\n"]}