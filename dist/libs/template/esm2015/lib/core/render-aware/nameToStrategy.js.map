{"version":3,"file":"nameToStrategy.js","sourceRoot":"ng://@rx-angular/template/","sources":["lib/core/render-aware/nameToStrategy.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,oBAAoB,EAAE,GAAG,EAAE,MAAM,gBAAgB,CAAC;AAG3D,MAAM,UAAU,cAAc,CAAI,UAAgC;IAChE,OAAO,CAAC,EAAsB,EAAiC,EAAE;QAC/D,OAAO,EAAE,CAAC,IAAI,CACZ,oBAAoB,EAAE,EACtB,GAAG,CACD,CAAC,QAAgB,EAAqB,EAAE;YACtC,MAAM,CAAC,GAAG,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC/B,IAAI,CAAC,CAAC,CAAC,EAAE;gBACP,OAAO,CAAC,CAAC;aACV;YACD,MAAM,IAAI,KAAK,CAAC,YAAY,QAAQ,kBAAkB,CAAC,CAAC;QAC1D,CAAC,CACF,CACF,CAAC;IACJ,CAAC,CAAC;AACJ,CAAC","sourcesContent":["import { Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map } from 'rxjs/operators';\r\nimport { RenderStrategy, StrategySelection } from './interfaces';\r\n\r\nexport function nameToStrategy<U>(strategies: StrategySelection<U>) {\r\n  return (o$: Observable<string>): Observable<RenderStrategy<U>> => {\r\n    return o$.pipe(\r\n      distinctUntilChanged(),\r\n      map(\r\n        (strategy: string): RenderStrategy<U> => {\r\n          const s = strategies[strategy];\r\n          if (!!s) {\r\n            return s;\r\n          }\r\n          throw new Error(`Strategy ${strategy} does not exist.`);\r\n        }\r\n      )\r\n    );\r\n  };\r\n}\r\n"]}