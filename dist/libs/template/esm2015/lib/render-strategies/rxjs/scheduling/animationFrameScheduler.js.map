{"version":3,"file":"animationFrameScheduler.js","sourceRoot":"ng://@rx-angular/template/","sources":["lib/render-strategies/rxjs/scheduling/animationFrameScheduler.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAA+B,MAAM,MAAM,CAAC;AAC/D,OAAO,EAAE,mBAAmB,EAAE,MAAM,eAAe,CAAC;AAEpD,MAAM,kBAAkB,GAAG,IAAI,UAAU,CAAC,UAAU,CAAC,EAAE;IACrD,IAAI,CAAC,GAAG,CAAC,CAAC;IACV,MAAM,EAAE,GAAG,mBAAmB,CAAC,uBAAuB,CAAC,CAAC,GAAG,EAAE;QAC3D,UAAU,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,CAAC;IAEH,OAAO,GAAG,EAAE;QACV,mBAAmB,CAAC,sBAAsB,CAAC,CAAC,EAAE,CAAC,CAAC;IAClD,CAAC,CAAC;AACJ,CAAC,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,gCAAgC,GAAkB;IAC7D,GAAG;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IACD,QAAQ,CACN,IAA8B,EAC9B,OAAgB,EAChB,KAAW;QAEX,OAAO,kBAAkB,CAAC,SAAS,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;IACzD,CAAC;CACF,CAAC","sourcesContent":["import { Observable, SchedulerLike, Subscription } from 'rxjs';\r\nimport { getZoneUnPatchedApi } from '../../../core';\r\n\r\nconst animationFrameTick = new Observable(subscriber => {\r\n  let i = 0;\r\n  const id = getZoneUnPatchedApi('requestAnimationFrame')(() => {\r\n    subscriber.next(++i);\r\n  });\r\n\r\n  return () => {\r\n    getZoneUnPatchedApi('cancelAnimationFrame')(id);\r\n  };\r\n});\r\n\r\nexport const unpatchedAnimationFrameScheduler: SchedulerLike = {\r\n  now() {\r\n    return 0;\r\n  },\r\n  schedule(\r\n    work: (...args: any[]) => void,\r\n    options?: number,\r\n    state?: any\r\n  ): Subscription {\r\n    return animationFrameTick.subscribe(() => work(state));\r\n  }\r\n};\r\n"]}